@using Listjj.Abstract
@using System.Threading.Tasks
@inherits PageBase



<button type="button" data-toggle="modal" data-target="#mainModal">
    <span class="input-zone p-3 m-2" style="float: left;">
        Api Key
    </span>
</button>
<div class="modal fade" id="mainModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="top: 50px;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Api key</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (@Key == Guid.Empty)
                {
                    <p>If you forgot old key, new can be generated. Old key will be deleted.</p>
                }
                else
                {
                    <p>Your new api key: @Key</p>
                    <p>
                        Check this out:<br />
                        curl -k https://localhost:5001/api/Listjj/GetAllListjj -H "Authorization: ApiKey @Key"<br /><br />
                        curl -k -X POST -H "Content-Type: application/json" -H "Authorization: ApiKey @Key" -d '{"name": "new", "value": "1", "description":"dsc", "categoryName":"default"}' https://localhost:5001/api/Listjj/AddItem <br /><br />
                        curl -k -X POST -H "Content-Type: application/json" -H "Authorization: ApiKey @Key" -d '{"id": "08d980c7-326f-4a0e-8de8-2f896c824ab0	"}' https://localhost:5001/api/Listjj/DelItem
                    </p>
                }
                <button type="button" class="btn btn-outline-primary" @onclick="GenerateKey">Generate Key</button>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject] private IJSRuntime JSRuntime { get; set; }
    [Inject] private IUnitOfWork UnitOfWork { get; set; }
    private Guid Key { get; set; }

    protected async Task GenerateKey()
    {
        var user = await UnitOfWork.Users.GetById(appState.UserId);
        bool isConfirmed = await JSRuntime.InvokeAsync<bool>("swalConfirm", "Are you sure you want to regenerate api key ?", $"Old is: '{user.ApiKey}'");
        if (!isConfirmed)
        {
            return;
        }

        Key = await UnitOfWork.Users.CreateApiKey(user);
    }
}
