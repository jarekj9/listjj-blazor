trigger:
- none
pr:
- none

pool:
  vmImage: ubuntu-latest

variables:
  SONARQUBE_IMAGE: 'sonarqube:lts-community'
  SONARQUBE_CONTAINERNAME: 'sonarqube'
  POSTGRES_IMAGE: 'sonarqube:lts-community'
  POSTGRES_CONTAINERNAME: 'sonar_db'

steps:
- script: |
    docker network create common-net
    docker run --rm -d --name $(SONARQUBE_CONTAINERNAME) --network common-net \
     -e POSTGRES_USER=sonar \
     -e POSTGRES_PASSWORD=sonar \
     -e POSTGRES_DB=sonar \
     $(SONARQUBE_IMAGE)
  displayName: 'Run PostgreSQL DB container'

- script: |
    docker run --rm -d --name $(POSTGRES_CONTAINERNAME) --network common-net \
     -e SONAR_JDBC_URL=jdbc:postgresql://$(POSTGRES_CONTAINERNAME):5432/sonar \
     -e SONAR_JDBC_USERNAME=sonar \
     -e SONAR_JDBC_PASSWORD=sonar \
     $(POSTGRES_IMAGE)
  displayName: 'Run SonarQube container'

- script: sleep 60;docker ps

- script: |
    docker stop $(SONARQUBE_CONTAINERNAME)
    docker stop $(POSTGRES_CONTAINERNAME)
    docker network rm common-net
  displayName: 'Clean Up'